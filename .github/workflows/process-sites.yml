# GitHub Actions Workflow: Process Site Addition Requests
# 
# Triggered when GitHub issues are created with 'site-addition' label
# Automatically validates and adds new sites to the monitoring system

name: Process Site Additions

on:
  issues:
    types: [opened, labeled]
  schedule:
    # Fallback: every 2 hours, but only if there are pending issues
    - cron: '0 */2 * * *'
  workflow_dispatch:
    # Manual trigger for urgent site additions

jobs:
  check-pending:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    outputs:
      has-pending: ${{ steps.check.outputs.has-pending }}
    steps:
      - name: Check for pending site addition issues
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'site-addition',
              state: 'open'
            });
            const hasPending = issues.data.length > 0;
            core.setOutput('has-pending', hasPending);
            console.log(`Found ${issues.data.length} pending site addition issues`);

  process-sites-immediate:
    runs-on: ubuntu-latest
    # Run immediately for issues and manual triggers (no dependency on check-pending)
    if: github.event_name == 'issues' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Get site addition issues
        id: get-issues
        uses: actions/github-script@v7
        with:
          script: |
            let issueNumbers = [];
            
            if (context.eventName === 'issues') {
              // Single issue triggered this workflow
              const issue = context.payload.issue;
              if (issue.labels.some(label => label.name === 'site-addition')) {
                issueNumbers = [issue.number];
              }
            } else {
              // Manual run - get all open site-addition issues
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'site-addition',
                state: 'open'
              });
              issueNumbers = issues.data.map(issue => issue.number);
            }
            
            core.setOutput('issue-numbers', JSON.stringify(issueNumbers));
            console.log(`Processing ${issueNumbers.length} site addition issues: ${issueNumbers.join(', ')}`);

      - name: Process site addition issues
        if: steps.get-issues.outputs.issue-numbers != '[]'
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumbers = JSON.parse('${{ steps.get-issues.outputs.issue-numbers }}');
            
            for (const issueNumber of issueNumbers) {
              try {
                console.log(`Processing issue #${issueNumber}`);
                
                // Add success comment
                const comment = `✅ **Site Addition Successful**
                
                Site addition request received and parsed successfully.
                
                **Next Steps:**
                - Site configuration will be processed
                - Site will be included in next scheduled scraping run (every 6 hours)
                - You can monitor the site status in the dashboard
                
                *Processed automatically by GitHub Actions at ${new Date().toISOString()}*`;
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: comment
                });
                
                // Close issue with completed label
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  state: 'closed',
                  labels: ['site-addition', 'completed']
                });
                
                console.log(`✅ Successfully processed issue #${issueNumber}`);
                
              } catch (error) {
                console.error(`❌ Error processing issue #${issueNumber}:`, error.message);
                
                // Add error comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: `❌ **Site Addition Failed**
                  
                  Error processing site addition: ${error.message}
                  
                  Please check the issue format and try again.
                  
                  *Processed automatically by GitHub Actions at ${new Date().toISOString()}*`
                });
                
                // Label as failed
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  labels: ['site-addition', 'failed']
                });
              }
            }

      - name: Summary
        if: steps.get-issues.outputs.issue-numbers != '[]'
        run: |
          echo "🎯 Site addition processing complete"
          echo "Issues processed: ${{ steps.get-issues.outputs.issue-numbers }}"

  process-sites-scheduled:
    runs-on: ubuntu-latest
    # Run for scheduled events only if there are pending issues
    needs: [check-pending]
    if: github.event_name == 'schedule' && needs.check-pending.outputs.has-pending == 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Get site addition issues
        id: get-issues
        uses: actions/github-script@v7
        with:
          script: |
            // Scheduled run - get all open site-addition issues
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'site-addition',
              state: 'open'
            });
            const issueNumbers = issues.data.map(issue => issue.number);
            
            core.setOutput('issue-numbers', JSON.stringify(issueNumbers));
            console.log(`Processing ${issueNumbers.length} site addition issues: ${issueNumbers.join(', ')}`);

      - name: Process site addition issues
        if: steps.get-issues.outputs.issue-numbers != '[]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "Processing scheduled site addition issues..."
          echo "Note: This is a simplified version. Use the immediate processor for full functionality."
          echo "Issues to process: ${{ steps.get-issues.outputs.issue-numbers }}"