# GitHub Actions Workflow: Process Site Addition Requests
# 
# Triggered when GitHub issues are created with 'site-addition' label
# Automatically validates and adds new sites to the monitoring system

name: Process Site Additions

on:
  issues:
    types: [labeled]
  schedule:
    # Fallback: every 2 hours, but only if there are pending issues
    - cron: '0 */2 * * *'
  workflow_dispatch:
    # Manual trigger for urgent site additions

jobs:
  check-pending:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    outputs:
      has-pending: ${{ steps.check.outputs.has-pending }}
    steps:
      - name: Check for pending site addition issues
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'site-addition',
              state: 'open'
            });
            const hasPending = issues.data.length > 0;
            core.setOutput('has-pending', hasPending);
            console.log(`Found ${issues.data.length} pending site addition issues`);

  process-sites-immediate:
    runs-on: ubuntu-latest
    # Run immediately for issues with site-addition label or manual triggers
    if: (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'site-addition')) || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies for location-binding
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Process site addition issues with Python
        id: process-issues
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            
            let issueNumbers = [];
            let processedIssues = [];
            let failedIssues = [];
            
            if (context.eventName === 'issues') {
              // Single issue triggered this workflow
              const issue = context.payload.issue;
              if (issue.labels.some(label => label.name === 'site-addition')) {
                issueNumbers = [issue.number];
              }
            } else {
              // Manual run - get all open site-addition issues
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'site-addition',
                state: 'open'
              });
              issueNumbers = issues.data.map(issue => issue.number);
            }
            
            console.log(`Processing ${issueNumbers.length} site addition issues: ${issueNumbers.join(', ')}`);
            
            for (const issueNumber of issueNumbers) {
              try {
                console.log(`Processing issue #${issueNumber}`);
                
                // Get issue details
                const issueResponse = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber
                });
                
                const issueBody = issueResponse.data.body || '';
                
                // Process the issue with Python script
                try {
                  const result = execSync(
                    `cd backend && python3 process_github_issues_simple.py`,
                    {
                      env: {
                        ...process.env,
                        GITHUB_ISSUE_NUMBER: issueNumber.toString(),
                        GITHUB_ISSUE_BODY: issueBody
                      },
                      encoding: 'utf8'
                    }
                  );
                  
                  console.log(`Python script output: ${result}`);
                  
                  // Add success comment
                  const comment = `‚úÖ **Site Addition Successful**
                  
                  Site has been successfully added to the monitoring system.
                  
                  **Processing Details:**
                  ${result}
                  
                  **Next Steps:**
                  - Site will be included in next scheduled scraping run (every 6 hours)
                  - You can monitor the site status in the dashboard
                  - Field mappings will be tested automatically
                  
                  *Processed automatically by GitHub Actions at ${new Date().toISOString()}*`;
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    body: comment
                  });
                  
                  // Close issue with completed label
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    state: 'closed',
                    labels: ['site-addition', 'completed']
                  });
                  
                  processedIssues.push(issueNumber);
                  console.log(`‚úÖ Successfully processed issue #${issueNumber}`);
                  
                } catch (pythonError) {
                  console.error(`Python script failed for issue #${issueNumber}:`, pythonError.message);
                  console.error(`Python script stderr:`, pythonError.stderr);
                  console.error(`Python script stdout:`, pythonError.stdout);
                  
                  // Add error comment
                  const errorComment = `‚ùå **Site Addition Failed**
                  
                  Error processing site addition: ${pythonError.message}
                  
                  **Common Issues:**
                  - Check that all required fields are present (Name, Base URL, RFP Page URL)
                  - Ensure URLs are valid and accessible
                  - Verify field mapping format: Field Name ‚Üí "Example Value" (data_type)
                  
                  Please fix the issue format and try again.
                  
                  *Processed automatically by GitHub Actions at ${new Date().toISOString()}*`;
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    body: errorComment
                  });
                  
                  // Label as failed
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    labels: ['site-addition', 'failed']
                  });
                  
                  failedIssues.push(issueNumber);
                }
                
              } catch (error) {
                console.error(`‚ùå Error processing issue #${issueNumber}:`, error.message);
                failedIssues.push(issueNumber);
              }
            }
            
            core.setOutput('processed-issues', JSON.stringify(processedIssues));
            core.setOutput('failed-issues', JSON.stringify(failedIssues));
            
            return {
              processed: processedIssues.length,
              failed: failedIssues.length,
              total: issueNumbers.length
            };

      - name: Install Playwright browsers for location-binding
        if: steps.process-issues.outputs.processed-issues != '[]'
        run: |
          cd backend
          playwright install chromium

      - name: Perform location-binding for new sites
        if: steps.process-issues.outputs.processed-issues != '[]'
        run: |
          echo "üîç Performing location-binding for newly added sites..."
          cd backend
          
          # Use main.py to test and update site configurations with real selectors
          python main.py list-sites
          
          # The site testing will automatically update field mappings with real selectors
          echo "‚úÖ Location-binding completed"

      - name: Commit updated sites.json
        if: steps.process-issues.outputs.processed-issues != '[]'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are changes to commit
          if git diff --quiet data/sites.json; then
            echo "No changes to sites.json"
          else
            git add data/sites.json
            git commit -m "üèõÔ∏è Add new sites from GitHub issues

            Processed issues: ${{ steps.process-issues.outputs.processed-issues }}
            
            ü§ñ Generated with GitHub Actions"
            git push
            echo "‚úÖ Successfully committed updated sites.json"
          fi

      - name: Summary
        if: steps.process-issues.outputs.processed-issues != '[]' || steps.process-issues.outputs.failed-issues != '[]'
        run: |
          echo "üéØ Site addition processing complete"
          echo "Successfully processed: ${{ steps.process-issues.outputs.processed-issues }}"
          echo "Failed to process: ${{ steps.process-issues.outputs.failed-issues }}"

  process-sites-scheduled:
    runs-on: ubuntu-latest
    # Run for scheduled events only if there are pending issues
    needs: [check-pending]
    if: github.event_name == 'schedule' && needs.check-pending.outputs.has-pending == 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Get site addition issues
        id: get-issues
        uses: actions/github-script@v7
        with:
          script: |
            // Scheduled run - get all open site-addition issues
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'site-addition',
              state: 'open'
            });
            const issueNumbers = issues.data.map(issue => issue.number);
            
            core.setOutput('issue-numbers', JSON.stringify(issueNumbers));
            console.log(`Processing ${issueNumbers.length} site addition issues: ${issueNumbers.join(', ')}`);

      - name: Process site addition issues
        if: steps.get-issues.outputs.issue-numbers != '[]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "Processing scheduled site addition issues..."
          echo "Note: This is a simplified version. Use the immediate processor for full functionality."
          echo "Issues to process: ${{ steps.get-issues.outputs.issue-numbers }}"