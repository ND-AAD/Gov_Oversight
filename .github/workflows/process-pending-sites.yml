# GitHub Actions Workflow: Process Pending Site Requests
# 
# This workflow creates GitHub issues from frontend localStorage requests
# This is a backup/alternative to the serverless function approach

name: Process Pending Site Requests

on:
  workflow_dispatch:
    inputs:
      site_requests:
        description: 'JSON array of site requests from frontend'
        required: true
        type: string
  schedule:
    # Check for and process any manual site requests every hour
    - cron: '0 * * * *'

jobs:
  create-github-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Parse and create GitHub issues
        uses: actions/github-script@v7
        with:
          script: |
            const siteRequests = JSON.parse('${{ github.event.inputs.site_requests }}');
            
            for (const request of siteRequests) {
              try {
                console.log(`Creating issue for site: ${request.title}`);
                
                const issue = await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: request.title,
                  body: request.body,
                  labels: request.labels || ['site-addition', 'automated']
                });
                
                console.log(`✅ Created issue #${issue.data.number}: ${request.title}`);
                
              } catch (error) {
                console.error(`❌ Failed to create issue for ${request.title}:`, error.message);
              }
            }
            
            console.log(`Processed ${siteRequests.length} site requests`);

  process-manual-requests:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Check for manual site addition requests
        uses: actions/github-script@v7
        with:
          script: |
            // This job is for future enhancement
            // Could check a specific repository file or API endpoint
            // For manual site requests that need to be converted to issues
            
            console.log('Checking for manual site requests...');
            console.log('No manual requests found (this is for future enhancement)');